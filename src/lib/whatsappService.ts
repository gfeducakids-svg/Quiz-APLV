// src/lib/whatsappService.ts
import axios from 'axios';

const WHATSAPP_TOKEN = process.env.WHATSAPP_TOKEN;
const PHONE_NUMBER_ID = process.env.PHONE_NUMBER_ID;

/**
 * Formata um n√∫mero de telefone para o padr√£o E.164, removendo caracteres n√£o num√©ricos.
 * Garante que o n√∫mero comece com 55 (c√≥digo do Brasil) se for um n√∫mero brasileiro.
 * @param phone - O n√∫mero de telefone a ser formatado.
 * @returns O n√∫mero de telefone formatado.
 */
function formatPhoneNumber(phone: string): string {
  if (!phone) return '';
  let digits = phone.replace(/\D/g, '');
  
  // Se o n√∫mero j√° tem o c√≥digo do pa√≠s (55), n√£o faz nada.
  if (digits.startsWith('55')) {
    return digits;
  }
  
  // Se for um n√∫mero brasileiro comum (com DDD), adiciona o 55.
  if (digits.length === 11 || digits.length === 10) {
    return `55${digits}`;
  }
  
  // Retorna os d√≠gitos como est√£o se n√£o for um padr√£o reconhecido.
  return digits;
}


/**
 * Envia uma mensagem de texto via WhatsApp Business API.
 * @param to - O n√∫mero de telefone do destinat√°rio.
 * @param message - O corpo da mensagem de texto.
 */
export async function sendWhatsAppMessage(to: string, message: string) {
  if (!WHATSAPP_TOKEN || !PHONE_NUMBER_ID) {
    console.error('‚ùå Credenciais do WhatsApp n√£o configuradas nas vari√°veis de ambiente. Mensagem n√£o enviada.');
    return;
  }
  
  const formattedPhone = formatPhoneNumber(to);
  if (!formattedPhone) {
      console.error('‚ùå N√∫mero de telefone inv√°lido ou n√£o fornecido. Mensagem n√£o enviada.');
      return;
  }

  const payload = {
    messaging_product: 'whatsapp',
    to: formattedPhone,
    type: 'text',
    text: {
      preview_url: false,
      body: message
    }
  };

  try {
    console.log(`...Enviando WhatsApp para ${formattedPhone}`);
    const response = await axios.post(
      `https://graph.facebook.com/v21.0/${PHONE_NUMBER_ID}/messages`,
      payload,
      {
        headers: {
          'Authorization': `Bearer ${WHATSAPP_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    console.log('‚úÖ Mensagem de WhatsApp enviada com sucesso:', {
      to: formattedPhone,
      messageId: response.data.messages[0].id
    });
    
    return response.data;
  } catch (error: any) {
    const errorCode = error.response?.data?.error?.code;
    const errorMessage = error.response?.data?.error?.message || error.message;

    if (errorCode === 133010) {
      console.error(`
‚ùå ERRO CR√çTICO: N√∫mero n√£o registrado (#133010)
Tentativa de envio para: ${formattedPhone}

üìã MOTIVO PROV√ÅVEL:
Voc√™ est√° usando um N√öMERO DE TESTE da Meta, que S√ì PODE enviar mensagens para n√∫meros pr√©-aprovados.

üîë SOLU√á√ÉO IMEDIATA:
1. Acesse o painel do seu aplicativo na Meta for Developers.
2. V√° para a se√ß√£o "WhatsApp" > "Configura√ß√£o da API".
3. No Passo 2 ("Envie e receba mensagens"), clique no menu suspenso "Para".
4. Clique em "Gerenciar lista de n√∫meros de telefone" e adicione o n√∫mero de destino.
5. Verifique o n√∫mero com o c√≥digo que ser√° enviado a ele.
6. Tente novamente.

(Se o n√∫mero j√° estiver em produ√ß√£o, verifique se ele possui uma conta do WhatsApp ativa).
      `);
    } else {
        console.error(`‚ùå Erro ao enviar mensagem de WhatsApp para ${formattedPhone}:`);
        if (error.response) {
          console.error('Dados do erro:', JSON.stringify(error.response.data, null, 2));
          console.error('Status do erro:', error.response.status);
        } else if (error.request) {
          console.error('Requisi√ß√£o enviada, mas sem resposta:', error.request);
        } else {
          console.error('Erro na configura√ß√£o da requisi√ß√£o:', error.message);
        }
        console.error('Payload enviado:', JSON.stringify(payload, null, 2));
    }
    
    // Lan√ßamos o erro para que a chamada original saiba que falhou, mas com uma mensagem clara.
    throw new Error(`WhatsApp API Error ${errorCode}: ${errorMessage}`);
  }
}
